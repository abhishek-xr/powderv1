{"ast":null,"code":"const API_BASE=\"http://127.0.0.1:8000/api\";export const uploadFile=async file=>{const formData=new FormData();formData.append(\"file\",file);const response=await fetch(`${API_BASE}/upload`,{method:\"POST\",body:formData});if(!response.ok){throw new Error(\"Failed to upload file\");}return response.json();};export const parseFile=async fileId=>{const response=await fetch(`${API_BASE}/parse/${fileId}`);if(!response.ok){throw new Error(\"Failed to parse file\");}return response.json();// { file_id, parsed_text }\n};export const getAnalysis=async fileId=>{const response=await fetch(`${API_BASE}/analysis/${fileId}`);if(!response.ok){throw new Error(\"Failed to get analysis\");}return response.json();// { file_id, filename, text_summary }\n};export const getDocument=async fileId=>{const response=await fetch(`${API_BASE}/document/${fileId}`);if(!response.ok){throw new Error(\"Failed to fetch document\");}return response.json();// { file_id, filename, filepath, parsed_text }\n};export const listDocuments=async()=>{const response=await fetch(`${API_BASE}/documents`);if(!response.ok){throw new Error(\"Failed to fetch documents\");}return response.json();// [{ file_id, filename, filepath, parsed_text }]\n};export const deleteDocument=async fileId=>{const response=await fetch(`${API_BASE}/document/${fileId}`,{method:\"DELETE\"});if(!response.ok){throw new Error(\"Failed to delete document\");}return response.json();// { message: \"Document deleted successfully\" }\n};","map":{"version":3,"names":["API_BASE","uploadFile","file","formData","FormData","append","response","fetch","method","body","ok","Error","json","parseFile","fileId","getAnalysis","getDocument","listDocuments","deleteDocument"],"sources":["/Users/elliot/Desktop/amazon assessment/powder/portfolio-api/venv/frontend/src/api.js"],"sourcesContent":["const API_BASE = \"http://127.0.0.1:8000/api\"; \n\nexport const uploadFile = async (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n\n  const response = await fetch(`${API_BASE}/upload`, {\n    method: \"POST\",\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Failed to upload file\");\n  }\n\n  return response.json();\n};\n\nexport const parseFile = async (fileId) => {\n  const response = await fetch(`${API_BASE}/parse/${fileId}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to parse file\");\n  }\n  return response.json(); // { file_id, parsed_text }\n};\n\nexport const getAnalysis = async (fileId) => {\n  const response = await fetch(`${API_BASE}/analysis/${fileId}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to get analysis\");\n  }\n  return response.json(); // { file_id, filename, text_summary }\n};\n\nexport const getDocument = async (fileId) => {\n  const response = await fetch(`${API_BASE}/document/${fileId}`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch document\");\n  }\n  return response.json(); // { file_id, filename, filepath, parsed_text }\n};\n\nexport const listDocuments = async () => {\n  const response = await fetch(`${API_BASE}/documents`);\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch documents\");\n  }\n  return response.json(); // [{ file_id, filename, filepath, parsed_text }]\n};\n\nexport const deleteDocument = async (fileId) => {\n  const response = await fetch(`${API_BASE}/document/${fileId}`, {\n    method: \"DELETE\",\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to delete document\");\n  }\n  return response.json(); // { message: \"Document deleted successfully\" }\n};\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,2BAA2B,CAE5C,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAO,CAAAC,IAAI,EAAK,CACxC,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAE7B,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,SAAS,CAAE,CACjDQ,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEN,QACR,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CAEA,MAAO,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,MAAM,EAAK,CACzC,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,UAAUc,MAAM,EAAE,CAAC,CAC3D,GAAI,CAACR,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CACzC,CACA,MAAO,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAE;AAC1B,CAAC,CAED,MAAO,MAAM,CAAAG,WAAW,CAAG,KAAO,CAAAD,MAAM,EAAK,CAC3C,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,aAAac,MAAM,EAAE,CAAC,CAC9D,GAAI,CAACR,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CACA,MAAO,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAE;AAC1B,CAAC,CAED,MAAO,MAAM,CAAAI,WAAW,CAAG,KAAO,CAAAF,MAAM,EAAK,CAC3C,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,aAAac,MAAM,EAAE,CAAC,CAC9D,GAAI,CAACR,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CAC7C,CACA,MAAO,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAE;AAC1B,CAAC,CAED,MAAO,MAAM,CAAAK,aAAa,CAAG,KAAAA,CAAA,GAAY,CACvC,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,YAAY,CAAC,CACrD,GAAI,CAACM,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAC9C,CACA,MAAO,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAE;AAC1B,CAAC,CAED,MAAO,MAAM,CAAAM,cAAc,CAAG,KAAO,CAAAJ,MAAM,EAAK,CAC9C,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,QAAQ,aAAac,MAAM,EAAE,CAAE,CAC7DN,MAAM,CAAE,QACV,CAAC,CAAC,CACF,GAAI,CAACF,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,2BAA2B,CAAC,CAC9C,CACA,MAAO,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAE;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}